#include "mbed.h"
#include <cstdio>

enum RICHTING{RECHTDOOR,LINKS,RECHTS,AFLEVEREN,DEFAULT};

RICHTING richting;
/*
DigitalOut Mlinksvooruit(D5);          //linker motor naar voren rijden
DigitalOut Mlinksachteruit(D6);        //linker motor naar achter rijden
DigitalOut Mrechtsachteruit(D7);         //rechter motor naar voren rijden
DigitalOut Mrechtsvooruit(D8);       //rechter motor naar achter rijden

DigitalOut led1(LED1);              //controle leds om te zien of de sensoren werken
DigitalOut led2(D2);

AnalogIn lijnsensorlinks(A0);           //input signaal lijnsensoren
AnalogIn lijnsensorrechts(A1);

PwmOut PWMlinks(D0);                //pwm output signaal linkerwiel
PwmOut PWMrechts(D1);               //pwm output signaal rechterwiel
*/
DigitalOut led1(LED1);              //controle leds om te zien of de sensoren werken
DigitalOut led2(D2);

DigitalOut Mlinksomhoog_aflevering(D3);          //linker motor naar voren rijden int 1 en 4 hbrug2
DigitalOut Mrechtsomhoog_aflevering(D4);        //linker motor naar achter rijden in 2 en 3 hbrug 2
DigitalOut Mlinksvooruit(D0);          //linker motor naar voren rijden int4 hbrug 1
DigitalOut Mlinksachteruit(D5);        //linker motor naar achter rijden int3 hbrug 1 
DigitalOut Mrechtsachteruit(D7);         //rechter motor naar voren rijden int2 hbrug 1
DigitalOut Mrechtsvooruit(D8);       //rechter motor naar achter rijden int1 hbrug 1

PinName pin_ECHO = D11; // Echo pin
PinName pin_TRIG = D12; // Trigger pin

InterruptIn drukkonp_1(D9, PullDown);
InterruptIn drukkonp_2(D13, PullDown); 

AnalogIn lijnsensorlinks(A0);           //input signaal lijnsensoren
AnalogIn lijnsensorrechts(A1);
AnalogIn Halsensor(A2);                 //input halsensor

PwmOut PWMrechts(D6);               //pwm output signaal rechterwiel
PwmOut PWMlinks(D1);                //pwm output signaal linkerwiel
PwmOut PWMomhoog(D10);              //pwm output signaal Omhoog/omlaag
PwmOut PWMaflever(A5);              //pwm output signaal afleverenpakket

float a = 0;
float b = 0;
float c = 0;
float d = 0;


void naarbeneden () {
    Mlinksomhoog_aflevering =1;           // welke kant draait de linker motor op
    Mrechtsomhoog_aflevering =0;

    PWMaflever.period(0.001);   // Periode tijd instellen PWMlinks
    PWMlinks= 0.9 ;           // Dutycycle instellen PWMlinks
}
void omhoog () {
    Mlinksomhoog_aflevering =0;           // welke kant draait de linker motor op
    Mrechtsomhoog_aflevering =1;

    PWMaflever.period(0.001);   // Periode tijd instellen PWMlinks
    PWMlinks= 0.9 ;           // Dutycycle instellen PWMlinks
}

void Vooruit () {
    Mlinksvooruit=1;           // welke kant draait de linker motor op
    Mlinksachteruit=0;

    PWMlinks.period(0.001);   // Periode tijd instellen PWMlinks
    PWMlinks= 0.7 ;           // Dutycycle instellen PWMlinks

    Mrechtsvooruit=1;
    Mrechtsachteruit=0;

    PWMrechts.period(0.001);
    PWMrechts=0.7 ;
}

void Rechtsaf (){
    Mlinksvooruit=1;           // welke kant draait de linker motor op
    Mlinksachteruit=0;

    PWMlinks.period(0.001);   // Periode tijd instellen PWMlinks
    PWMlinks=0.6  ;           // Dutycycle instellen PWMlinks

    Mrechtsvooruit=1;
    Mrechtsachteruit=0;

    PWMrechts.period(0.001);
    PWMrechts=0.4 ;
}


void Linksaf () {
    Mlinksvooruit=1;           // welke kant draait de linker motor op
    Mlinksachteruit=0;

    PWMlinks.period(0.001);   // Periode tijd instellen PWMlinks
    PWMlinks=0.4  ;           // Dutycycle instellen PWMlinks

    Mrechtsvooruit=1;
    Mrechtsachteruit=0;

    PWMrechts.period(0.001);
    PWMrechts=0.6 ;
}
void richtingcheck ()
{
    a = lijnsensorlinks;
    b = lijnsensorrechts;
    c = lijnsensorlinks;
    d = lijnsensorrechts;
    printf("%.3f\n",a);
    printf("%.3f\n",b);
    wait_us(200);
}

int walk =+ 1;

int main(){
    wait_us (2000000);
    richting = RECHTDOOR;


while(1) 
{
wait_us(30000);
if (drukkonp_1 == 1)
{
    omhoog();
}
else if (drukkonp_2 == 1)
{
    naarbeneden();
}
else if(drukkonp_1 == 0){


    switch(richting)
    { 

    case RECHTDOOR:
        printf("RECHTDOOR\n");
        richtingcheck();
        if (a < 0.3f)
        {
            richting = LINKS;
        }
        else if (b < 0.3f)
        {
            richting = RECHTS;
        }
        else if (c >= 0.3f && d >= 0.3f)
        {
          Vooruit();
          printf("VOORUIT\n");  
        }

        break;

    case LINKS:
        printf("LINKS\n");
        richtingcheck();
    
        if (b < 0.3f)
        {
            richting = RECHTS;
        }    
        else if(c >= 0.3f && d >= 0.3f)
        {
            richting = RECHTDOOR;
        }
      
        Linksaf();
        printf("linksaf\n");    
        

    break;
    {}
    case RECHTS:
    printf("RECHTS\n");
    richtingcheck();

        if (a < 0.3f)
        {
            richting = LINKS;
        }    
        else if(c >= 0.3f && d >= 0.3f)
        {
            richting = RECHTDOOR;
        }  
    
        Rechtsaf();
        printf("REChtsaf\n");
         
    break;
        {}


    case DEFAULT:
    break;{}
}
    }
}

}    
